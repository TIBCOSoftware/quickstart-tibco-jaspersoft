{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This master template creates a VPC infrastructure for a multi-AZ, multi-tier deployment of a workload on AWS. It deploys a VPC with bastions and a workload cluster behind an ELB. The cluster is configured to use an S3 bucket for storage  **WARNING** This template creates EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1puat847h)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "RemoteAccessCIDR",
                        "KeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "Bastion instance configuration"
                    },
                    "Parameters": [
                        "BastionAMIOS",
                        "BastionInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "TIBCO JasperReports Server node and cluster configuration"
                    },
                    "Parameters": [
                        "WorkloadInstanceType",
                        "S3BucketName",
                        "WorkloadNodesMinSize",
                        "WorkloadNodesMaxSize",
                        "WorkloadNodesDesiredCapacity",
                        "OperatorEmail"
                    ]
                },
                {
                    "Label": {
                        "default": "Repository Database configuration"
                    },
                    "Parameters": [
                        "RDSDbSize",
                        "RDSUser",
                        "RDSPassword",
                        "DBName",
                        "IncludeSamples"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "BastionAMIOS": {
                    "default": "Bastion instance operating system"
                },
                "BastionInstanceType": {
                    "default": "Bastion instance type"
                },
                "KeyPairName": {
                    "default": "Key pair name"
                },
                "OperatorEmail": {
                    "default": "Auto Scaling notification email address"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public subnet 2 CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 bucket name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 key prefix"
                },
                "RDSDbSize": {
                    "default": "Repository RDS database instance type"
                },
                "RDSUser": {
                    "default": "Repository RDS database user name"
                },
                "RDSPassword": {
                    "default": "Repository RDS database password"
                },
                "DBName": {
                    "default": "Repository RDS database name"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed bastion external access CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "WorkloadInstanceType": {
                    "default": "JasperReports Server instance type"
                },
                "WorkloadNodesDesiredCapacity": {
                    "default": "Cluster desired instance capacity"
                },
                "WorkloadNodesMaxSize": {
                    "default": "Cluster maximum instance capacity"
                },
                "WorkloadNodesMinSize": {
                    "default": "Cluster minimum instance capacity"
                },
                "S3BucketName": {
                    "default" : "Name of S3 bucket for license and customization"
                },
                "IncludeSamples": {
                    "default" : "Include samples?"
                }

            }
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Only two Availability Zones are used for this deployment, and the logical order of your selections is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>",
            "ConstraintDescription" : "Required"

        },
        "BastionAMIOS": {
           "Description":"The Linux distribution for the AMI to be used for the bastion instances.",
           "Type":"String",
           "AllowedValues": [
                "Amazon-Linux2-HVM",
                "CentOS-7-HVM",
                "Ubuntu-Server-20.04-LTS-HVM",
                "SUSE-SLES-15-HVM"
            ],
           "Default": "Amazon-Linux2-HVM",
           "MinLength":"1",
           "ConstraintDescription":"Required"
        },
        "BastionInstanceType": {
            "Description": "Amazon EC2 instance type for the bastion instances. Has to be available for the deployment region.",
            "Type": "String",
            "Default": "t3.micro",
            "AllowedValues": [
                "t3.nano",
                "t3.micro",
                "t3.small",
                "t3.medium",
                "t3.large"
            ],
            "MinLength": "1",
            "ConstraintDescription" : "Required"
        },
        "KeyPairName": {
            "Description": "The name of an existing AWS public/private key pair, which allows SSH into bastion and JasperReports Server EC2 instances.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription" : "Required"
        },
        "OperatorEmail": {
            "Description": "(Optional) Email address for scaling operation notifications.",
            "Type": "String",
            "AllowedPattern": "(([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))||(^$)",
            "ConstraintDescription": "The form of a valid email address."
        },
        "PrivateSubnet1CIDR": {
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
            "Type": "String",
            "Default": "10.0.0.0/19",
            "MinLength": "1",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "PrivateSubnet2CIDR": {
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
            "Type": "String",
            "MinLength": "1",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "PublicSubnet1CIDR": {
            "Description": "CIDR block for the public (DMZ) subnet 1 located in Availability Zone 1.",
            "Type": "String",
            "Default": "10.0.128.0/20",
            "MinLength": "1",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
       },
        "PublicSubnet2CIDR": {
            "Description": "CIDR block for the public (DMZ) subnet 2 located in Availability Zone 2.",
            "Type": "String",
            "Default": "10.0.144.0/20",
            "MinLength": "1",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "QSS3BucketName": {
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String",
            "Default": "aws-quickstart",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
        },
        "QSS3KeyPrefix": {
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String",
            "Default": "quickstart-tibco-jaspersoft/",
            "MaxLength": "64",
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
        },
        "RemoteAccessCIDR": {
            "Description": "The CIDR IP range that is permitted to access the bastions. We recommend that you set this value to a trusted IP range.",
            "Type": "String",
            "MinLength": "1",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x"
        },
        "VPCCIDR": {
            "Description": "CIDR block for the new VPC.",
            "Type": "String",
            "Default": "10.0.0.0/16",
            "MinLength": "1",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28"
        },
        "RDSDbSize": {
            "Description" : "The instance type for the RDS database for the JasperReports Server repository.",
            "Type" : "String",
            "Default" : "db.t2.medium",
            "MinLength": "1",
            "AllowedValues" : [ "db.m5.large", "db.m5.xlarge", "db.m5.2xlarge","db.t2.medium","db.t2.large", "db.t2.xlarge", "db.t2.2xlarge"],
            "ConstraintDescription" : "Must be one of the RDS instance types."
        },
        "RDSUser" : {
            "Description" : "Master user name for the repository database.",
            "Type" : "String",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern" : "[-_a-zA-Z0-9]*",
            "ConstraintDescription" : "Can contain only alphanumeric characters, minus and underscores."
        },
        "RDSPassword" : {
            "Description" : "Master password for the repository database.",
            "Type" : "String",
            "MinLength": "1",
            "MaxLength": "64",
            "NoEcho" : "true",
            "AllowedPattern" : "[-_a-zA-Z0-9]*",
            "ConstraintDescription" : "Can contain only alphanumeric characters, minus and underscores."
        },
        "WorkloadInstanceType": {
            "Description": "Amazon EC2 instance type for the TIBCO JasperReports Server instances.. Has to be available for the deployment region.",
            "Type": "String",
            "AllowedValues": [
                "m4.large","m4.xlarge","m4.2xlarge","m4.4xlarge","m4.10xlarge","r3.xlarge","r3.2xlarge","c4.xlarge","c4.2xlarge","m5.large"
            ],
            "Default": "m4.xlarge",
            "MinLength": "1",
            "ConstraintDescription": "Must contain valid instance type."
        },
        "WorkloadNodesDesiredCapacity": {
            "Description": "Desired number of nodes in the Auto Scaling group.",
            "Type": "Number",
            "Default": "1",
            "MinValue": "1",
            "MaxValue": "10",
            "ConstraintDescription" : "Required. Must be between 1 and 10."
        },
        "WorkloadNodesMaxSize": {
            "Description": "Maximum number of nodes in the Auto Scaling group.",
            "Type": "Number",
            "Default": "4",
            "MinValue": "1",
            "MaxValue": "10",
            "ConstraintDescription" : "Required. Must be between 1 and 10."
        },
        "WorkloadNodesMinSize": {
            "Description": "Minimum number of nodes in the Auto Scaling group.",
            "Type": "Number",
            "Default": "1",
            "MinValue": "1",
            "MaxValue": "10",
            "ConstraintDescription" : "Required. Must be between 1 and 10."
        },
        "S3BucketName": {
            "Description" : "S3 bucket for license and customizations. Name of existing bucket, or leave blank to create a new bucket.",
            "Type" : "String",
            "Default" : "",
            "AllowedPattern" : "[-_a-z0-9]*",
            "MaxLength": "64",
            "ConstraintDescription" : "Can contain only alphanumeric characters, minus and underscores."
        },
        "DBName" : {
            "Description" : "JasperReports Server repository database name.",
            "Type" : "String",
            "Default": "jasperserver",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern" : "[-_a-zA-Z0-9]*",
            "ConstraintDescription" : "Can contain only alphanumeric characters, minus and underscores."
        },
        "IncludeSamples" : {
            "Description": "Include Jaspersoft sample data, reports and dashboards?",
            "Type": "String",
            "AllowedValues": [
                "Yes",
                "No"
            ],
            "Default": "Yes",
            "ConstraintDescription": "Yes/No"
        }

    },
    "Conditions" : {
        "GovCloudRegion": { "Fn::Or" : [
            {"Fn::Equals": [{"Ref": "AWS::Region"},"us-gov-west-1"]},
            {"Fn::Equals": [{"Ref": "AWS::Region"},"us-gov-east-1"]}
            ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                       "https://${QSS3BucketName}.s3${QSS3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/submodules/quickstart-aws-vpc/templates/aws-vpc.template",
                       {
                          "QSS3Region": {
                             "Fn::If": [
                                "GovCloudRegion",
                                "-us-gov-west-1",
                                ""
                             ]
                          }
                       }
                    ]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": "2",
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.s3${QSS3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template",
                       {
                          "QSS3Region": {
                             "Fn::If": [
                                "GovCloudRegion",
                                "-us-gov-west-1",
                                ""
                             ]
                          }
                       }
                    ]
                },
                "Parameters": {
                    "BastionAMIOS": {
                        "Ref": "BastionAMIOS"
                    },
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketRegion": {
                        "Fn::If": [
                            "GovCloudRegion",
                            {"Ref": "AWS::Region"},
                            {"Ref": "AWS::NoValue"}
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "EnableBanner": "false",
                    "EnableTCPForwarding": "true"
                }
            }
        },
        "DatabaseStack" : {
            "DependsOn": "BastionStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.s3${QSS3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/rds-postgres-cluster.template",
                       {
                          "QSS3Region": {
                             "Fn::If": [
                                "GovCloudRegion",
                                "-us-gov-west-1",
                                ""
                             ]
                          }
                       }
                    ]
                },
                "Parameters": {
                    "RDSDbSize": {
                        "Ref": "RDSDbSize"
                    },
                    "RDSUser": {
                        "Ref": "RDSUser"
                    },
                    "RDSPassword": {
                        "Ref": "RDSPassword"
                    },
                    "RDSMultiAz" : "true",
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }

        },
        "WorkloadStackClustered": {
            "DependsOn": "DatabaseStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                       "https://${QSS3BucketName}.s3${QSS3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/tibco-jrs-cluster-existing-infrastructure.template",
                       {
                          "QSS3Region": {
                             "Fn::If": [
                                "GovCloudRegion",
                                "-us-gov-west-1",
                                ""
                             ]
                          }
                       }
                    ]
                },
                "Parameters": {
                    "WorkloadInstanceType": {
                        "Ref": "WorkloadInstanceType"
                    },
                    "WorkloadNodesDesiredCapacity": {
                        "Ref": "WorkloadNodesDesiredCapacity"
                    },
                    "WorkloadNodesMaxSize": {
                        "Ref": "WorkloadNodesMaxSize"
                    },
                    "WorkloadNodesMinSize": {
                        "Ref": "WorkloadNodesMinSize"
                    },
                    "BastionSecurityGroupID": {
                        "Fn::GetAtt": [
                            "BastionStack",
                            "Outputs.BastionSecurityGroupID"
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "OperatorEmail": {
                        "Ref": "OperatorEmail"
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "RDSUser": {
                        "Ref": "RDSUser"
                    },
                    "RDSPassword": {
                        "Ref": "RDSPassword"
                    },
                    "RDSAddress": {
                        "Fn::GetAtt": [
                            "DatabaseStack",
                            "Outputs.Address"
                        ]
                    },
                    "RDSPort": {
                        "Fn::GetAtt": [
                            "DatabaseStack",
                            "Outputs.Port"
                        ]
                    },
                    "DBName" : { "Ref": "DBName" },
                    "IncludeSamples" : { "Ref": "IncludeSamples" },
                    "S3BucketName" : {
                        "Ref": "S3BucketName"
                    }

                }
            }
        }

    },
    "Outputs": {
      "GettingStartedPublicURL": {
        "Description": "TIBCO JasperReports Getting started URL",
        "Value": {
          "Fn::GetAtt": [
            "WorkloadStackClustered",
            "Outputs.GettingStartedPublicURL"
          ]
        }
      },
      "S3CustomizationBucket": {
        "Description" : "S3 bucket where you can upload your license file \"jasperserver.license\" and customizations for product",
        "Value": {
          "Fn::GetAtt": [
            "WorkloadStackClustered",
            "Outputs.S3CustomizationBucket"
          ]
        }
      },
      "AutoscalingGroup" : {
        "Description" : "TIBCO JasperReports Autoscaling Group",
        "Value": {
          "Fn::GetAtt": [
            "WorkloadStackClustered",
            "Outputs.AutoscalingGroup"
          ]
        }

      },
      "Login" : {
        "Value": "superuser",
        "Description": "Master user name"
      },
      "Password" : {
        "Value" :  "Same as provided password for database",
        "Description" : "Initial master user password"
      }
    }
}
